#include <bits/stdc++.h>
using namespace std;

int64_t binpow_mod(int64_t a, int64_t b, int64_t n) {
    int64_t res = 1;
    while (b > 0) {
        if (b & 1) res = res * a % n;
        a = a * a % n;
        b >>= 1;
    }
    return res;
}

vector<int64_t> get_dividers(int64_t n) {
    vector<int64_t> dividers;

    for (int i = 1; i <= sqrt(n); ++i) {
        if (n % i == 0){
            dividers.push_back(i);
            dividers.push_back(n / i);
        }
    }

    sort(dividers.begin(), dividers.end());
    return dividers;
}


int main() {
    int64_t k, p; cin >> k >> p;
    vector<int64_t> dividers = get_dividers(p - 1);

    for(auto& d: dividers){
        if (binpow_mod(k, d, p) == 1){
            cout << d << endl;
            break;
        }
    }
    return 0;
}